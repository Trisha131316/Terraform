Tasks To Be Performed:
1. Destroy the previous deployments
2. Create a script to install Apache2
3. Run this script on a newly created EC2 instance
4. Print the IP address of the instance in a file on the local once deployed

provider "aws"{
    region = "us-east-2"
    access_key= "AR"
    secret_key= ""
}
resource "aws_vpc" "default" {
    cidr_block= "10.0.0.0/16"
    enable_dns_hostnames = true
    tags={
        Name= "My-VPC"
    }
}

resource "aws_internet_gateway" "gw" {
    vpc_id = aws_vpc.default.id
}

resource "aws_subnet" "tf_test_subnet" {
    vpc_id= aws_vpc.default.id
    cidr_block= "10.0.0.0/24"
    map_public_ip_on_launch = true
    depends_on = [aws_internet_gateway.gw]
}

resource "aws_route_table" "rt" {
  vpc_id = aws_vpc.default.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.gw.id
  }
}

resource "aws_route_table_association" "assoc" {
  subnet_id      = aws_subnet.tf_test_subnet.id
  route_table_id = aws_route_table.rt.id
}


resource "aws_security_group" "allow_tls" {
  name= "allow_tls"
  description= "Allow TLS inbound traffic and all outbound traffic"
  vpc_id= aws_vpc.default.id

  tags = {
    Name = "allow_tls"
  }
}

resource "aws_vpc_security_group_ingress_rule" "allow_tls_ipv4" {
  security_group_id= aws_security_group.allow_tls.id
  cidr_ipv4= "0.0.0.0/0"
  from_port= 80
  ip_protocol= "tcp"
  to_port= 80
}

resource "aws_vpc_security_group_ingress_rule" "allow_tls_ssh" {
  security_group_id= aws_security_group.allow_tls.id
  cidr_ipv4= "0.0.0.0/0"
  from_port= 22
  ip_protocol= "tcp"
  to_port= 22
}

resource "aws_vpc_security_group_egress_rule" "allow_all_traffic_ipv4" {
  security_group_id= aws_security_group.allow_tls.id
  cidr_ipv4= "0.0.0.0/0"
  ip_protocol= "-1" # semantically equivalent to all ports
}

resource "aws_instance" "web-server"{
    ami= "ami-04f167a56786e4b09"
    instance_type= "t2.micro"
    subnet_id= aws_subnet.tf_test_subnet.id
    vpc_security_group_ids= [aws_security_group.allow_tls.id]
    associate_public_ip_address= true

    user_data= file("C:/Users/saini/trrproject/apache.sh")
    tags= {
        Name= "Apache-Server"
    }

}

output "public_ip" {
  value = aws_instance.web-server.public_ip
}




apache.sh
#!/bin/bash
sudo apt update
sudo apt install -y apache2
sudo systemctl start apache2
sudo systemctl enable apache2

